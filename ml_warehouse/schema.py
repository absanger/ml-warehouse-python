# coding: utf-8
from sqlalchemy import Boolean, Column, DateTime, ForeignKey, Integer, String, Text
from sqlalchemy.orm import relationship
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()
metadata = Base.metadata


class Sample(Base):
    __tablename__ = "sample"

    id_sample_tmp = Column(Integer, primary_key=True)
    id_lims = Column(String, nullable=False)
    uuid_sample_lims = Column(String, unique=True)
    id_sample_lims = Column(String, nullable=False)
    last_updated = Column(DateTime)
    recorded_at = Column(DateTime)
    deleted_at = Column(DateTime)
    created = Column(DateTime)
    name = Column(String)
    reference_genome = Column(String)
    organism = Column(String)
    accession_number = Column(String)
    common_name = Column(String)
    description = Column(Text)
    taxon_id = Column(Integer)
    father = Column(String)
    mother = Column(String)
    replicate = Column(String)
    ethnicity = Column(String)
    gender = Column(String)
    cohort = Column(String)
    country_of_origin = Column(String)
    geographical_region = Column(String)
    sanger_sample_id = Column(String)
    control = Column(Boolean)
    supplier_name = Column(String)
    public_name = Column(String)
    sample_visibility = Column(String)
    strain = Column(String)
    consent_withdrawn = Column(Boolean, nullable=False)
    donor_id = Column(String)
    phenotype = Column(String)
    developmental_stage = Column(String)
    control_type = Column(String)


class Study(Base):
    __tablename__ = "study"

    id_study_tmp = Column(Integer, primary_key=True)
    id_lims = Column(String, nullable=False)
    uuid_study_lims = Column(String, unique=True)
    id_study_lims = Column(String, nullable=False)
    last_updated = Column(DateTime, nullable=False)
    recorded_at = Column(DateTime, nullable=False)
    deleted_at = Column(DateTime)
    created = Column(DateTime)
    name = Column(String)
    reference_genome = Column(String)
    ethically_approved = Column(Boolean)
    faculty_sponsor = Column(String)
    state = Column(String)
    study_type = Column(String)
    abstract = Column(Text)
    abbreviation = Column(String)
    accession_number = Column(String)
    description = Column(Text)
    contains_human_dna = Column(Boolean)
    contaminated_human_dna = Column(Boolean)
    data_release_strategy = Column(String)
    data_release_sort_of_study = Column(String)
    ena_project_id = Column(String)
    study_title = Column(String)
    study_visibility = Column(String)
    ega_dac_accession_number = Column(String)
    array_express_accession_number = Column(String)
    ega_policy_accession_number = Column(String)
    data_release_timing = Column(String)
    data_release_delay_period = Column(String)
    data_release_delay_reason = Column(String)
    remove_x_and_autosomes = Column(Boolean, nullable=False)
    aligned = Column(Boolean, nullable=False)
    separate_y_chromosome_data = Column(Boolean, nullable=False)
    data_access_group = Column(String)
    prelim_id = Column(String)
    hmdmc_number = Column(String)
    data_destination = Column(String)
    s3_email_list = Column(String)
    data_deletion_period = Column(String)


class OseqFlowcell(Base):
    __tablename__ = "oseq_flowcell"

    id_oseq_flowcell_tmp = Column(Integer, primary_key=True)
    id_flowcell_lims = Column(String, nullable=False)
    last_updated = Column(DateTime, nullable=False)
    recorded_at = Column(DateTime, nullable=False)
    id_sample_tmp = Column(ForeignKey("sample.id_sample_tmp"), nullable=False)
    id_study_tmp = Column(ForeignKey("study.id_study_tmp"), nullable=False)
    experiment_name = Column(String, nullable=False)
    instrument_name = Column(String, nullable=False)
    instrument_slot = Column(Integer, nullable=False)
    tag_set_id_lims = Column(String)
    tag_set_name = Column(String)
    tag_identifier = Column(String)
    tag_sequence = Column(String)
    tag2_set_id_lims = Column(String)
    tag2_set_name = Column(String)
    tag2_identifier = Column(String)
    tag2_sequence = Column(String)
    pipeline_id_lims = Column(String, nullable=False)
    requested_data_type = Column(String, nullable=False)
    deleted_at = Column(DateTime)
    id_lims = Column(String)

    sample = relationship("Sample")
    study = relationship("Study")
